(self.webpackChunktodo=self.webpackChunktodo||[]).push([[185,520],{185:(e,t,n)=>{"use strict";n.r(t),n.d(t,{newFolder:()=>d,styleHighlightedFolder:()=>a,delFromList:()=>s,rightClickHandler:()=>c,showModal:()=>h,closeModal:()=>u});var l=n(256),i=n(520);let d=function(e,t){let n=document.createElement("li"),i=l.folderArray[l.folderArray.length-1].folder;e.appendChild(n),n.innerText=i,n.classList.add("folders"),t.value=""},r=null,o=document.getElementById("menu"),a=function(e){document.querySelectorAll(".folders").forEach((e=>e.classList.remove("highlight"))),e.classList.add("highlight"),r=e},s=function(){r.remove(),o.classList.remove("active"),(0,i.render)()},c=function(e){o.style.top=e.clientY+10+"px",o.style.left=e.clientX+10+"px",o.classList.add("active")},h=function(){document.querySelector(".open-modal").style.visibility="visible"},u=function(){document.querySelector(".open-modal").style.visibility="hidden"}},520:(e,t,n)=>{"use strict";n.r(t),n.d(t,{displayTasks:()=>r,render:()=>d,openTask:()=>s,deleteNoteFromDisplay:()=>c,deleteTaskDom:()=>h,strikeThrough:()=>m,deleteAll:()=>u});var l=n(256);let i=document.querySelector("#body"),d=function(){for(;i.firstChild;)i.removeChild(i.firstChild)},r=function(){d();let e=l.folderArray[l.folderArray.findIndex((e=>!0===e.highlight))],t=e.tasks;for(let l=0;l<t.length;l++){let d=document.createElement("ul");d.classList.add("task-display"),i.appendChild(d);let o=document.createElement("img");d.appendChild(o),o.id="task-delete",o.src="https://image.flaticon.com/icons/png/512/61/61848.png";let a=document.createElement("li");d.appendChild(a),a.innerText=t[l].title;let s=document.createElement("li");d.appendChild(s),s.innerText=t[l].date,n=d,"low"===(r=e.tasks[l].prio)?n.style.backgroundColor="green":"med"===r?n.style.backgroundColor="yellow":"high"===r&&(n.style.backgroundColor="red")}var n,r},o=document.querySelector("#go-back"),a=document.querySelector("#del-task"),s=function(e){let t=l.folderArray[l.folderArray.findIndex((e=>!0===e.highlight))].tasks;var n;d(),n=e,o.style.visibility="visible",i.appendChild(o),a.style.visibility="visible",i.appendChild(a),a.dataset.parent=n,function(e){let t=document.createElement("h2");t.id="task-text",i.appendChild(t),t.innerText=e}(e);let r=t.findIndex((t=>t.title===e));if(function(e,t){let n=document.createElement("h4");n.id="date-text",i.appendChild(n),n.innerText=t[e].date}(r,t),function(e,t){let n=document.createElement("div");n.id="descr-text",i.appendChild(n),n.innerText=t[e].descr}(r,t),""!==t[r].notes[0])for(let e=0;e<t[r].notes.length;e++){let n=document.createElement("div");n.classList.add("note-container"),i.appendChild(n);let l=document.createElement("img");n.appendChild(l),l.id="note-delete",l.src="https://image.flaticon.com/icons/png/512/61/61848.png";let d=document.createElement("div");n.appendChild(d),d.innerText=t[r].notes[e],!0===t[r].strike[e]&&(d.id="strike-through")}},c=function(e){e.target.parentNode.remove()},h=function(e){e.target.parentNode.remove()},u=function(e){let t,n=document.getElementsByTagName("li");for(let l=0;l<n.length;l++)n[l].innerText===e&&(t=n[l]);t.parentElement.remove()},m=function(e){"strike-through"===e.target.id?(e.target.removeAttribute("id"),n.e(152).then(n.bind(n,152)).then((t=>{t.strikeFalse(e)}))):(e.target.id="strike-through",n.e(152).then(n.bind(n,152)).then((t=>{t.strikeTrue(e)})))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,